{"version":3,"file":"popup/popup.aa4f06f3aed619524dde.js","mappings":"mBAEA,MAAMA,EACJ,WAAAC,CAAYC,GACVC,KAAKD,MAAQA,EACbC,KAAKC,KAAOD,KAAKD,MAAMG,cAAc,qBACrCF,KAAKG,qBAAuBH,KAAKD,MAAMK,QAAQC,qBAC/CL,KAAKM,aAAeN,KAAKG,sBAAwBH,KAAKO,gBAAgBP,KAAKG,sBAAwBK,SAASC,iBAAiBT,KAAKG,sBAAwB,GAC1JH,KAAKU,cAAgBV,KAAKD,MAAMU,iBAAiB,8BACjDT,KAAKW,kBAAoBX,KAAKY,uBAC9BZ,KAAKa,sBAAwBb,KAAKW,kBAAkB,GACpDX,KAAKc,qBAAuBd,KAAKW,kBAAkBX,KAAKW,kBAAkBI,OAAS,GACnFf,KAAKgB,YAAc,SACnBhB,KAAKiB,mBAAgBC,EAErB,MAAMC,EAAqBC,OAAOC,SAASC,KACvCH,GACFnB,KAAKM,aAAaiB,SAASC,IACzB,MAAMC,EAAcD,EAAQF,KACxBG,GAAeA,IAAgBN,GACjCnB,KAAK0B,WACP,IAIA1B,KAAKM,aAAaS,QACpBf,KAAKM,aAAaiB,SAASI,IACzBA,EAAYC,iBAAiB,SAAUC,IACrCA,EAAEC,iBACF9B,KAAK0B,YACL1B,KAAKiB,cAAgBU,CAAW,GAChC,IAIF3B,KAAKM,aAAaS,QACpBf,KAAKU,cAAca,SAASQ,IAC1BA,EAAaH,iBAAiB,SAAUC,IACtCA,EAAEC,iBACF9B,KAAKgC,YAAY,GACjB,IAINxB,SAASoB,iBAAiB,WAAYC,IACtB,WAAVA,EAAEI,KACJjC,KAAKgC,YACP,IAGFhC,KAAKD,MAAM6B,iBAAiB,SAAS,KACnC5B,KAAKgC,YAAY,IAGnBhC,KAAKC,KAAK2B,iBAAiB,SAAUC,IACnCA,EAAEK,iBAAiB,GAEvB,CAEA,eAAA3B,CAAgB4B,GACd,IACE3B,SAASC,iBAAiB0B,EAC5B,CAAE,MAAON,GACP,GAAIA,aAAaO,aACf,OAAO,CAEX,CACA,OAAO,CACT,CAEA,QAAAC,GACE,QAAOrC,KAAKD,MAAMuC,UAAUC,SAASvC,KAAKgB,YAC5C,CAEA,SAAAwB,GACExC,KAAKD,MAAM6B,iBAAiB,WAAYa,IACpB,QAAdA,EAAMR,KAAmC,IAAlBQ,EAAMC,UAC3BD,EAAME,SAEJnC,SAASoC,gBAAkB5C,KAAKa,wBAClC4B,EAAMX,iBACN9B,KAAKc,qBAAqB+B,SAIxBrC,SAASoC,gBAAkB5C,KAAKc,uBAClC2B,EAAMX,iBACN9B,KAAKa,sBAAsBgC,SAGjC,GAEJ,CAEA,oBAAAjC,GACE,OAAOkC,MAAMC,KAAK/C,KAAKD,MAAMU,iBAAiB,uFAAuFuC,QAClIC,IAAQA,EAAGC,aAAa,cAAgBD,EAAGE,aAAa,gBAA8B,WAAZF,EAAGG,MAElF,CAEA,SAAA1B,GACO1B,KAAKqC,aACRrC,KAAKD,MAAMuC,UAAUe,IAAIrD,KAAKgB,aAC9BhB,KAAKD,MAAMuD,SAAS,EAAG,GACvBtD,KAAKD,MAAM6B,iBAAiB,iBAAkBa,IACxCA,EAAMc,SAAWvD,KAAKD,OAASC,KAAKqC,YACtCrC,KAAKa,sBAAsBgC,OAC7B,IAEF7C,KAAKwC,YAET,CAEA,UAAAR,GACMhC,KAAKqC,aACPrC,KAAKD,MAAMuC,UAAUkB,OAAOxD,KAAKgB,aACjChB,KAAKiB,eAAe4B,MAAM,CACxBY,eAAe,IAGrB,EAGajD,SAASC,iBAAiB,gBAElCc,SAASxB,IACd,IAAIF,EAAUE,EAAM,G","sources":["webpack://srsly/./src/js/popup.js"],"sourcesContent":["import \"../scss/components/_popup.scss\";\r\n\r\nclass MainPopup {\r\n  constructor(popup) {\r\n    this.popup = popup;\r\n    this.main = this.popup.querySelector(\"[data-popup-main]\");\r\n    this.togglerOpenSelectors = this.popup.dataset.popupTriggerSelector;\r\n    this.togglersOpen = this.togglerOpenSelectors && this.isValidSelector(this.togglerOpenSelectors) ? document.querySelectorAll(this.togglerOpenSelectors) : [];\r\n    this.togglersClose = this.popup.querySelectorAll(\"[data-popup-toggler-close]\");\r\n    this.focusableElements = this.getFocusableElements();\r\n    this.firstFocusableElement = this.focusableElements[0];\r\n    this.lastFocusableElement = this.focusableElements[this.focusableElements.length - 1];\r\n    this.activeClass = \"active\";\r\n    this.popupOpenedBy = undefined;\r\n\r\n    const windowLocationHash = window.location.hash;\r\n    if (windowLocationHash) {\r\n      this.togglersOpen.forEach((toggler) => {\r\n        const togglerHash = toggler.hash;\r\n        if (togglerHash && togglerHash === windowLocationHash) {\r\n          this.popupShow();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.togglersOpen.length) {\r\n      this.togglersOpen.forEach((togglerOpen) => {\r\n        togglerOpen.addEventListener(\"click\", (e) => {\r\n          e.preventDefault();\r\n          this.popupShow();\r\n          this.popupOpenedBy = togglerOpen;\r\n        });\r\n      });\r\n    }\r\n\r\n    if (this.togglersOpen.length) {\r\n      this.togglersClose.forEach((togglerClose) => {\r\n        togglerClose.addEventListener(\"click\", (e) => {\r\n          e.preventDefault();\r\n          this.popupClose();\r\n        });\r\n      });\r\n    }\r\n\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      if (e.key === \"Escape\") {\r\n        this.popupClose();\r\n      }\r\n    });\r\n\r\n    this.popup.addEventListener(\"click\", () => {\r\n      this.popupClose();\r\n    });\r\n\r\n    this.main.addEventListener(\"click\", (e) => {\r\n      e.stopPropagation();\r\n    });\r\n  }\r\n\r\n  isValidSelector(selector) {\r\n    try {\r\n      document.querySelectorAll(selector);\r\n    } catch (e) {\r\n      if (e instanceof DOMException) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isActive() {\r\n    return this.popup.classList.contains(this.activeClass) ? true : false;\r\n  }\r\n\r\n  focusTrap() {\r\n    this.popup.addEventListener(\"keydown\", (event) => {\r\n      if (event.key === \"Tab\" || event.keyCode === 9) {\r\n        if (event.shiftKey) {\r\n          // if shift key pressed for shift + tab combination\r\n          if (document.activeElement === this.firstFocusableElement) {\r\n            event.preventDefault();\r\n            this.lastFocusableElement.focus();\r\n          }\r\n        } else {\r\n          // if tab key is pressed\r\n          if (document.activeElement === this.lastFocusableElement) {\r\n            event.preventDefault();\r\n            this.firstFocusableElement.focus();\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getFocusableElements() {\r\n    return Array.from(this.popup.querySelectorAll('a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])')).filter(\r\n      (el) => !el.hasAttribute(\"disabled\") && !el.getAttribute(\"aria-hidden\") && el.type !== \"hidden\"\r\n    );\r\n  }\r\n\r\n  popupShow() {\r\n    if (!this.isActive()) {\r\n      this.popup.classList.add(this.activeClass);\r\n      this.popup.scrollTo(0, 0);\r\n      this.popup.addEventListener(\"transitionend\", (event) => {\r\n        if (event.target === this.popup && this.isActive()) {\r\n          this.firstFocusableElement.focus();\r\n        }\r\n      });\r\n      this.focusTrap();\r\n    }\r\n  }\r\n\r\n  popupClose() {\r\n    if (this.isActive()) {\r\n      this.popup.classList.remove(this.activeClass);\r\n      this.popupOpenedBy?.focus({\r\n        preventScroll: true,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nconst popups = document.querySelectorAll(\"[data-popup]\");\r\n\r\npopups.forEach((popup) => {\r\n  new MainPopup(popup);\r\n});\r\n"],"names":["MainPopup","constructor","popup","this","main","querySelector","togglerOpenSelectors","dataset","popupTriggerSelector","togglersOpen","isValidSelector","document","querySelectorAll","togglersClose","focusableElements","getFocusableElements","firstFocusableElement","lastFocusableElement","length","activeClass","popupOpenedBy","undefined","windowLocationHash","window","location","hash","forEach","toggler","togglerHash","popupShow","togglerOpen","addEventListener","e","preventDefault","togglerClose","popupClose","key","stopPropagation","selector","DOMException","isActive","classList","contains","focusTrap","event","keyCode","shiftKey","activeElement","focus","Array","from","filter","el","hasAttribute","getAttribute","type","add","scrollTo","target","remove","preventScroll"],"sourceRoot":""}