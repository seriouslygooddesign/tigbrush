{"version":3,"file":"popup/popup.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://srsly/./src/scss/components/_popup.scss?647a","webpack://srsly/webpack/bootstrap","webpack://srsly/webpack/runtime/make namespace object","webpack://srsly/./src/js/popup.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"../scss/components/_popup.scss\";\r\n\r\nclass MainPopup {\r\n  constructor(popup) {\r\n    this.popup = popup;\r\n    this.main = this.popup.querySelector(\"[data-popup-main]\");\r\n    this.togglerOpenSelectors = this.popup.dataset.popupTriggerSelector;\r\n    this.togglersOpen = this.togglerOpenSelectors && this.isValidSelector(this.togglerOpenSelectors) ? document.querySelectorAll(this.togglerOpenSelectors) : [];\r\n    this.togglersClose = this.popup.querySelectorAll(\"[data-popup-toggler-close]\");\r\n    this.focusableElements = this.getFocusableElements();\r\n    this.firstFocusableElement = this.focusableElements[0];\r\n    this.lastFocusableElement = this.focusableElements[this.focusableElements.length - 1];\r\n    this.activeClass = \"active\";\r\n    this.popupOpenedBy = undefined;\r\n\r\n    const windowLocationHash = window.location.hash;\r\n    if (windowLocationHash) {\r\n      this.togglersOpen.forEach((toggler) => {\r\n        const togglerHash = toggler.hash;\r\n        if (togglerHash && togglerHash === windowLocationHash) {\r\n          this.popupShow();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.togglersOpen.length) {\r\n      this.togglersOpen.forEach((togglerOpen) => {\r\n        togglerOpen.addEventListener(\"click\", (e) => {\r\n          e.preventDefault();\r\n          this.popupShow();\r\n          this.popupOpenedBy = togglerOpen;\r\n        });\r\n      });\r\n    }\r\n\r\n    if (this.togglersOpen.length) {\r\n      this.togglersClose.forEach((togglerClose) => {\r\n        togglerClose.addEventListener(\"click\", (e) => {\r\n          e.preventDefault();\r\n          this.popupClose();\r\n        });\r\n      });\r\n    }\r\n\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      if (e.key === \"Escape\") {\r\n        this.popupClose();\r\n      }\r\n    });\r\n\r\n    this.popup.addEventListener(\"click\", () => {\r\n      this.popupClose();\r\n    });\r\n\r\n    this.main.addEventListener(\"click\", (e) => {\r\n      e.stopPropagation();\r\n    });\r\n  }\r\n\r\n  isValidSelector(selector) {\r\n    try {\r\n      document.querySelectorAll(selector);\r\n    } catch (e) {\r\n      if (e instanceof DOMException) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isActive() {\r\n    return this.popup.classList.contains(this.activeClass) ? true : false;\r\n  }\r\n\r\n  focusTrap() {\r\n    this.popup.addEventListener(\"keydown\", (event) => {\r\n      if (event.key === \"Tab\" || event.keyCode === 9) {\r\n        if (event.shiftKey) {\r\n          // if shift key pressed for shift + tab combination\r\n          if (document.activeElement === this.firstFocusableElement) {\r\n            event.preventDefault();\r\n            this.lastFocusableElement.focus();\r\n          }\r\n        } else {\r\n          // if tab key is pressed\r\n          if (document.activeElement === this.lastFocusableElement) {\r\n            event.preventDefault();\r\n            this.firstFocusableElement.focus();\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getFocusableElements() {\r\n    return Array.from(this.popup.querySelectorAll('a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])')).filter(\r\n      (el) => !el.hasAttribute(\"disabled\") && !el.getAttribute(\"aria-hidden\") && el.type !== \"hidden\"\r\n    );\r\n  }\r\n\r\n  popupShow() {\r\n    if (!this.isActive()) {\r\n      this.popup.classList.add(this.activeClass);\r\n      this.popup.scrollTo(0, 0);\r\n      this.popup.addEventListener(\"transitionend\", (event) => {\r\n        if (event.target === this.popup && this.isActive()) {\r\n          this.firstFocusableElement.focus();\r\n        }\r\n      });\r\n      this.focusTrap();\r\n    }\r\n  }\r\n\r\n  popupClose() {\r\n    if (this.isActive()) {\r\n      this.popup.classList.remove(this.activeClass);\r\n      this.popupOpenedBy?.focus({\r\n        preventScroll: true,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nconst popups = document.querySelectorAll(\"[data-popup]\");\r\n\r\npopups.forEach((popup) => {\r\n  new MainPopup(popup);\r\n});\r\n"],"names":[],"sourceRoot":""}